{"version":3,"sources":["streamelements.js","Overlay.tsx","index.tsx","Overlay.module.css"],"names":["log","debug","SOUND_ASSEMBLE_URL","process","animatorGeneral","duration","enter","audioSettings","common","volume","playersSettings","assemble","src","loop","bleepsSettings","player","Overlay","useState","data","setData","React","activate","setActivate","useEffect","timeout","setTimeout","clearTimeout","window","onWidgetLoadInitialData","initOverlay","addEventListener","obj","detail","event","itemId","listener","split","recents","sort","a","b","Date","parse","createdAt","currency","fieldData","eventsLimit","includeFollowers","includeRedemptions","includeHosts","minHost","includeRaids","minRaid","includeSubs","includeTips","minTip","includeCheers","minCheer","direction","locale","textOrder","fadeoutTime","className","styles","root","animator","frameBox","hover","console","bind","enable","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kPAEMA,EAAMC,IAAM,kB,WCMZD,EAAMC,IAAM,WAEZC,EAAkB,UAAMC,+DAAN,iBAElBC,EAAkB,CAAEC,SAAU,CAAEC,MAAO,MACvCC,EAAgB,CAAEC,OAAQ,CAAEC,OAAQ,MACpCC,EAAkB,CAAEC,SAAU,CAAEC,IAAK,CAACV,GAAqBW,MAAM,IACjEC,EAAiB,CAAEH,SAAU,CAAEI,OAAQ,aAEtC,SAASC,IACd,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCC,IAAMH,UAAS,GAA/C,mBAAOI,EAAP,KAAiBC,EAAjB,KAsBA,OApBAC,qBAAU,WACR,IAAMC,EAAUC,YAAW,kBAAMH,GAAY,KAAO,KACpD,OAAO,kBAAMI,aAAaF,MACzB,IAEHD,qBAAU,WACJI,OAAOC,yBACT5B,EAAI,2BAA4B,CAAEkB,KAAMS,OAAOC,0BAC/CT,EAAQQ,OAAOC,2BAEf5B,EAAI,yBACJ2B,OAAOE,YAAcV,GDPzBQ,OAAOG,iBAAiB,mBAAmB,SAAUC,GACnD/B,EAAI,qBAAsB,CAAE+B,QAEvBA,EAAIC,OAAOC,QAIuB,qBAA5BF,EAAIC,OAAOC,MAAMC,SAC1BH,EAAIC,OAAOG,SAAW,qBAGPJ,EAAIC,OAAOG,SAASC,MAAM,KAAK,GAClCL,EAAIC,OAAOC,UAG3BN,OAAOG,iBAAiB,gBAAgB,SAAUC,GAChD/B,EAAI,kBAAmB,CAAE+B,QAEXA,EAAIC,OAAOK,QAEjBC,MAAK,SAAUC,EAAGC,GACxB,OAAOC,KAAKC,MAAMH,EAAEI,WAAaF,KAAKC,MAAMF,EAAEG,cAGjCZ,EAAIC,OAAOY,SAE1B,IAAMC,EAAYd,EAAIC,OAAOa,UAEfA,EAAUC,YACLD,EAAUE,iBACRF,EAAUG,mBAChBH,EAAUI,aACfJ,EAAUK,QACLL,EAAUM,aACfN,EAAUO,QACNP,EAAUQ,YACVR,EAAUS,YACfT,EAAUU,OACHV,EAAUW,cACfX,EAAUY,SACTZ,EAAUa,UACTb,EAAUc,OACXd,EAAUe,UACRf,EAAUgB,iBCjCvB,IAEHtC,qBAAU,WACRvB,EAAI,qBAAsBkB,KACzB,CAACA,IAGF,qBAAK4C,UAAWC,IAAOC,KAAvB,SACE,cAAC,qBAAD,UACE,eAAC,iBAAD,CACEzD,cAAeA,EACfG,gBAAiBA,EACjBI,eAAgBA,EAHlB,UAKE,cAAC,iBAAD,IACA,cAAC,0BAAD,CAAyBmD,SAAU7D,EAAnC,SACE,cAAC,WAAD,CAEE0D,UAAWC,IAAOG,SAClBD,SAAU,CAAE5C,YACZ8C,OAAK,a,OChDnBlE,IAAMD,IAAMoE,QAAQpE,IAAIqE,KAAKD,SAC7BnE,IAAMqE,OAAO,KAEbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACzD,EAAD,MAEF0D,SAASC,eAAe,U,mBCb1BC,EAAOC,QAAU,CAAC,KAAO,sBAAsB,SAAW,6B","file":"static/js/main.d3e00662.chunk.js","sourcesContent":["import debug from \"debug\";\n\nconst log = debug(\"streamelements\");\n\nexport function listenEvents() {\n  let eventsLimit = 5,\n    userLocale = \"en-US\",\n    includeFollowers = true,\n    includeRedemptions = true,\n    includeHosts = true,\n    minHost = 0,\n    includeRaids = true,\n    minRaid = 0,\n    includeSubs = true,\n    includeTips = true,\n    minTip = 0,\n    includeCheers = true,\n    direction = \"top\",\n    textOrder = \"nameFirst\",\n    minCheer = 0,\n    fadeoutTime = 0;\n\n  let userCurrency,\n    totalEvents = 0;\n\n  window.addEventListener(\"onEventReceived\", function (obj) {\n    log(\"onEventReceived %O\", { obj });\n\n    if (!obj.detail.event) {\n      return;\n    }\n\n    if (typeof obj.detail.event.itemId !== \"undefined\") {\n      obj.detail.listener = \"redemption-latest\";\n    }\n\n    const listener = obj.detail.listener.split(\"-\")[0];\n    const event = obj.detail.event;\n  });\n\n  window.addEventListener(\"onWidgetLoad\", function (obj) {\n    log(\"onWidgetLoad %O\", { obj });\n\n    let recents = obj.detail.recents;\n\n    recents.sort(function (a, b) {\n      return Date.parse(a.createdAt) - Date.parse(b.createdAt);\n    });\n\n    userCurrency = obj.detail.currency;\n\n    const fieldData = obj.detail.fieldData;\n\n    eventsLimit = fieldData.eventsLimit;\n    includeFollowers = fieldData.includeFollowers === \"yes\";\n    includeRedemptions = fieldData.includeRedemptions === \"yes\";\n    includeHosts = fieldData.includeHosts === \"yes\";\n    minHost = fieldData.minHost;\n    includeRaids = fieldData.includeRaids === \"yes\";\n    minRaid = fieldData.minRaid;\n    includeSubs = fieldData.includeSubs === \"yes\";\n    includeTips = fieldData.includeTips === \"yes\";\n    minTip = fieldData.minTip;\n    includeCheers = fieldData.includeCheers === \"yes\";\n    minCheer = fieldData.minCheer;\n    direction = fieldData.direction;\n    userLocale = fieldData.locale;\n    textOrder = fieldData.textOrder;\n    fadeoutTime = fieldData.fadeoutTime;\n  });\n}\n","import React, { useEffect, useState } from \"react\";\nimport debug from \"debug\";\nimport { ArwesThemeProvider, StylesBaseline, FrameBox } from \"@arwes/core\";\nimport { BleepsProvider } from \"@arwes/sounds\";\nimport { AnimatorGeneralProvider } from \"@arwes/animation\";\nimport styles from \"./Overlay.module.css\";\nimport { listenEvents } from \"./streamelements\";\n\nconst log = debug(\"overlay\");\n\nconst SOUND_ASSEMBLE_URL = `${process.env.PUBLIC_URL}/assemble.mp3`;\n\nconst animatorGeneral = { duration: { enter: 1000 } };\nconst audioSettings = { common: { volume: 0.25 } };\nconst playersSettings = { assemble: { src: [SOUND_ASSEMBLE_URL], loop: true } };\nconst bleepsSettings = { assemble: { player: \"assemble\" } };\n\nexport function Overlay() {\n  const [data, setData] = useState(null);\n  const [activate, setActivate] = React.useState(false);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setActivate(true), 1000);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  useEffect(() => {\n    if (window.onWidgetLoadInitialData) {\n      log(\"found data in window, %O\", { data: window.onWidgetLoadInitialData });\n      setData(window.onWidgetLoadInitialData);\n    } else {\n      log(\"put setData to window\");\n      window.initOverlay = setData;\n    }\n    listenEvents();\n  }, []);\n\n  useEffect(() => {\n    log(\"data is updated %O\", data);\n  }, [data]);\n\n  return (\n    <div className={styles.root}>\n      <ArwesThemeProvider>\n        <BleepsProvider\n          audioSettings={audioSettings}\n          playersSettings={playersSettings}\n          bleepsSettings={bleepsSettings}\n        >\n          <StylesBaseline />\n          <AnimatorGeneralProvider animator={animatorGeneral}>\n            <FrameBox\n              // @ts-ignore\n              className={styles.frameBox}\n              animator={{ activate }}\n              hover\n            />\n          </AnimatorGeneralProvider>\n        </BleepsProvider>\n      </ArwesThemeProvider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport debug from \"debug\";\nimport { Overlay } from \"./Overlay\";\nimport \"./index.css\";\n// import reportWebVitals from './reportWebVitals';\n\ndebug.log = console.log.bind(console);\ndebug.enable(\"*\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <Overlay />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Overlay_root__2ig3N\",\"frameBox\":\"Overlay_frameBox__3OfnI\"};"],"sourceRoot":""}