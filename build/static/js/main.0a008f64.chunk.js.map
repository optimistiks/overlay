{"version":3,"sources":["streamelements.js","Overlay.tsx","index.tsx","Overlay.module.css"],"names":["log","debug","Overlay","useEffect","window","addEventListener","obj","detail","event","itemId","listener","split","console","recents","sort","a","b","Date","parse","createdAt","currency","fieldData","eventsLimit","includeFollowers","includeRedemptions","includeHosts","minHost","includeRaids","minRaid","includeSubs","includeTips","minTip","includeCheers","minCheer","direction","locale","textOrder","fadeoutTime","className","styles","text","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iLAEMA,E,MAAMC,GAAM,kB,WCEX,SAASC,IAId,OAHAC,qBAAU,WDoBVC,OAAOC,iBAAiB,mBAAmB,SAAUC,GAGnD,GAFAN,EAAI,UAAW,kBAAmB,CAAEM,QAE/BA,EAAIC,OAAOC,MAAhB,CAIuC,qBAA5BF,EAAIC,OAAOC,MAAMC,SAC1BH,EAAIC,OAAOG,SAAW,qBAGxB,IAAMA,EAAWJ,EAAIC,OAAOG,SAASC,MAAM,KAAK,GAC1CH,EAAQF,EAAIC,OAAOC,MAEzBI,QAAQZ,IAAI,iBAAkB,CAAEQ,QAAOE,iBAGzCN,OAAOC,iBAAiB,gBAAgB,SAAUC,GAChDN,EAAI,UAAW,eAAgB,CAAEM,QAEnBA,EAAIC,OAAOM,QAEjBC,MAAK,SAAUC,EAAGC,GACxB,OAAOC,KAAKC,MAAMH,EAAEI,WAAaF,KAAKC,MAAMF,EAAEG,cAGjCb,EAAIC,OAAOa,SAE1B,IAAMC,EAAYf,EAAIC,OAAOc,UAEfA,EAAUC,YACLD,EAAUE,iBACRF,EAAUG,mBAChBH,EAAUI,aACfJ,EAAUK,QACLL,EAAUM,aACfN,EAAUO,QACNP,EAAUQ,YACVR,EAAUS,YACfT,EAAUU,OACHV,EAAUW,cACfX,EAAUY,SACTZ,EAAUa,UACTb,EAAUc,OACXd,EAAUe,UACRf,EAAUgB,iBC/DvB,IAED,8BACE,qBAAKC,UAAWC,IAAOC,KAAvB,2BCLNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACzC,EAAD,MAEF0C,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,yB","file":"static/js/main.0a008f64.chunk.js","sourcesContent":["import debug from \"debug\";\n\nconst log = debug(\"streamelements\");\n\nexport function listenEvents() {\n  let eventsLimit = 5,\n    userLocale = \"en-US\",\n    includeFollowers = true,\n    includeRedemptions = true,\n    includeHosts = true,\n    minHost = 0,\n    includeRaids = true,\n    minRaid = 0,\n    includeSubs = true,\n    includeTips = true,\n    minTip = 0,\n    includeCheers = true,\n    direction = \"top\",\n    textOrder = \"nameFirst\",\n    minCheer = 0,\n    fadeoutTime = 0;\n\n  let userCurrency,\n    totalEvents = 0;\n\n  window.addEventListener(\"onEventReceived\", function (obj) {\n    log(\"overlay\", \"onEventReceived\", { obj });\n\n    if (!obj.detail.event) {\n      return;\n    }\n\n    if (typeof obj.detail.event.itemId !== \"undefined\") {\n      obj.detail.listener = \"redemption-latest\";\n    }\n\n    const listener = obj.detail.listener.split(\"-\")[0];\n    const event = obj.detail.event;\n\n    console.log(\"received event\", { event, listener });\n  });\n\n  window.addEventListener(\"onWidgetLoad\", function (obj) {\n    log(\"overlay\", \"onWidgetLoad\", { obj });\n\n    let recents = obj.detail.recents;\n\n    recents.sort(function (a, b) {\n      return Date.parse(a.createdAt) - Date.parse(b.createdAt);\n    });\n\n    userCurrency = obj.detail.currency;\n\n    const fieldData = obj.detail.fieldData;\n\n    eventsLimit = fieldData.eventsLimit;\n    includeFollowers = fieldData.includeFollowers === \"yes\";\n    includeRedemptions = fieldData.includeRedemptions === \"yes\";\n    includeHosts = fieldData.includeHosts === \"yes\";\n    minHost = fieldData.minHost;\n    includeRaids = fieldData.includeRaids === \"yes\";\n    minRaid = fieldData.minRaid;\n    includeSubs = fieldData.includeSubs === \"yes\";\n    includeTips = fieldData.includeTips === \"yes\";\n    minTip = fieldData.minTip;\n    includeCheers = fieldData.includeCheers === \"yes\";\n    minCheer = fieldData.minCheer;\n    direction = fieldData.direction;\n    userLocale = fieldData.locale;\n    textOrder = fieldData.textOrder;\n    fadeoutTime = fieldData.fadeoutTime;\n  });\n}\n","import React, { useEffect } from \"react\";\nimport styles from \"./Overlay.module.css\";\nimport { listenEvents } from \"./streamelements\";\n\nexport function Overlay() {\n  useEffect(() => {\n    listenEvents();\n  }, []);\n  return (\n    <div>\n      <div className={styles.text}>hello world</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Overlay } from \"./Overlay\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Overlay />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Overlay_text__3ghdn\"};"],"sourceRoot":""}